import commandmatrix.extra._
import Settings._

ThisProject / versionScheme := Some("early-semver")

val testCasesVersion = "0.2.2"

// IDEs don't like projects which share sources
val ideScala = scala3version
Global / excludeLintKeys += ideSkipProject
val only1JvmScalaInIde =
  MatrixAction.ForPlatforms(VirtualAxis.jvm).Configure(_.settings(ideSkipProject := (scalaVersion.value != ideScala)))
val noJsNoNativeInIde =
  MatrixAction.ForPlatforms(VirtualAxis.js, VirtualAxis.native).Configure(_.settings(ideSkipProject := true))

val pipez = projectMatrix
  .in(file("pipez"))
  .someVariations(
    List(scala2_13version, scala3version),
    List(VirtualAxis.jvm, VirtualAxis.js, VirtualAxis.native)
  )(only1JvmScalaInIde, noJsNoNativeInIde)
  .enablePlugins(GitVersioning)
  .disablePlugins(WelcomePlugin)
  .settings(name := "pipez")
  .settings(commonSettings: _*)
  .settings(
    libraryDependencies ++= Seq(
      ("com.kubuszok" %%% "pipez-testcases" % testCasesVersion).cross(CrossVersion.for3Use2_13) % Test,
      ("com.kubuszok" %%% "pipez-testcases-scala3" % testCasesVersion).cross(CrossVersion.for2_13Use3) % Test
    )
  )
  .settings(publishSettings: _*)

val pipezDsl = projectMatrix
  .in(file("pipez-dsl"))
  .someVariations(
    List(scala2_13version, scala3version),
    List(VirtualAxis.jvm, VirtualAxis.js, VirtualAxis.native)
  )(only1JvmScalaInIde, noJsNoNativeInIde)
  .enablePlugins(GitVersioning)
  .disablePlugins(WelcomePlugin)
  .settings(name := "pipez-dsl")
  .settings(commonSettings: _*)
  .settings(
    libraryDependencies ++= Seq(
      ("com.kubuszok" %%% "pipez-testcases" % testCasesVersion).cross(CrossVersion.for3Use2_13) % Test,
      ("com.kubuszok" %%% "pipez-testcases-scala3" % testCasesVersion).cross(CrossVersion.for2_13Use3) % Test
    )
  )
  .settings(publishSettings: _*)
  .dependsOn(pipez)

val root = project
  .in(file("."))
  .enablePlugins(GitVersioning, WelcomePlugin)
  .settings(
    name := "pipez-build",
    logo :=
      s"""Pipez ${version.value} build for ($scala2_13version, $scala3version) x (Scala JVM, Scala.js $scalaJSVersion, Scala Native $nativeVersion)
         |
         |This build uses sbt-projectmatrix with sbt-commandmatrix helper:
         | - Scala JVM adds no suffix to a project name seen in build.sbt
         | - Scala.js adds the "JS" suffix to a project name seen in build.sbt
         | - Scala Native adds the "Native" suffix to a project name seen in build.sbt
         | - Scala 2.13 adds no suffix to a project name seen in build.sbt
         | - Scala 3 adds the suffix "3" to a project name seen in build.sbt
         |
         |When working with IntelliJ, edit "val ideScala = ..." in build.sbt to control which Scala version you're currently working with.""".stripMargin,
    usefulTasks := Seq(
      sbtwelcome.UsefulTask("listAll", "projects", "List all projects generated by the build matrix"),
      sbtwelcome.UsefulTask("testAll", "test", "Compile and test all projects in all Scala versions and platforms"),
      sbtwelcome.UsefulTask("stageRelease", "publishSigned", "Stage all versions for publishing (assuming you have sbt-sonatype as a global plugin)"),
      sbtwelcome.UsefulTask("publishRelease", "sonatypeBundleRelease", "Publish all artifacts staged for release (assuming you have sbt-sonatype as a global plugin)"),
    )
  )
  .settings(commonSettings: _*)
  .settings(publishSettings: _*)
  .settings(noPublishSettings: _*)
  .aggregate(pipez.projectRefs ++ pipezDsl.projectRefs: _*)
